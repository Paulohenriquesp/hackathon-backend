import OpenAI from 'openai';
import env from '../config/env';

// Verificar se a chave API est√° configurada
if (!env.OPENAI_API_KEY) {
  console.error('‚ùå OPENAI_API_KEY n√£o est√° configurada no arquivo .env');
  throw new Error('OPENAI_API_KEY n√£o configurada');
}

console.log('‚úÖ OpenAI API Key carregada:', env.OPENAI_API_KEY.substring(0, 20) + '...');

// Inicializar cliente OpenAI
const openai = new OpenAI({
  apiKey: env.OPENAI_API_KEY,
});

// Interface para as atividades geradas
export interface GeneratedActivities {
  summary: string;
  objectives: string[];
  exercises: string[];
  multiple_choice: MultipleChoiceQuestion[];
  essay_questions: string[];
}

export interface MultipleChoiceQuestion {
  question: string;
  options: string[];
  answer: string;
}

// Servi√ßo de IA
export class AIService {
  /**
   * Gera atividades educacionais a partir do conte√∫do de um material
   */
  async generateActivities(
    materialContent: string,
    materialTitle: string,
    discipline: string,
    grade: string,
    materialType: string
  ): Promise<GeneratedActivities> {
    try {
      console.log('ü§ñ AIService: Iniciando gera√ß√£o de atividades...');
      console.log('üìö Material:', materialTitle);
      console.log('üìñ Disciplina:', discipline);
      console.log('üéì S√©rie:', grade);

      // Limitar conte√∫do para evitar exceder limite de tokens
      const truncatedContent = materialContent.substring(0, 8000);

      // Prompt estruturado para gerar atividades
      const prompt = this.buildPrompt(
        truncatedContent,
        materialTitle,
        discipline,
        grade,
        materialType
      );

      // Fazer requisi√ß√£o para OpenAI
      const response = await openai.chat.completions.create({
        model: 'gpt-4o-mini', // Ou 'gpt-4' para melhor qualidade
        messages: [
          {
            role: 'system',
            content: 'Voc√™ √© um assistente pedag√≥gico especializado em criar atividades educacionais de alta qualidade para professores brasileiros. Sempre responda em portugu√™s do Brasil e siga rigorosamente o formato JSON solicitado.',
          },
          {
            role: 'user',
            content: prompt,
          },
        ],
        temperature: 0.7,
        max_tokens: 2000,
        response_format: { type: 'json_object' },
      });

      // Extrair resposta
      const contentResponse = response.choices[0].message.content;

      if (!contentResponse) {
        throw new Error('OpenAI retornou resposta vazia');
      }

      console.log('‚úÖ AIService: Resposta recebida da OpenAI');

      // Parsear JSON
      const activities: GeneratedActivities = JSON.parse(contentResponse);

      // Validar estrutura da resposta
      this.validateActivitiesStructure(activities);

      console.log('‚úÖ AIService: Atividades geradas com sucesso');
      console.log(`üìù ${activities.exercises.length} exerc√≠cios`);
      console.log(`‚ùì ${activities.multiple_choice.length} quest√µes de m√∫ltipla escolha`);
      console.log(`‚úçÔ∏è ${activities.essay_questions.length} quest√µes dissertativas`);

      return activities;

    } catch (error: any) {
      console.error('‚ùå AIService: Erro ao gerar atividades:', error);
      console.error('‚ùå Erro detalhado:', {
        message: error.message,
        code: error.code,
        status: error.status,
        type: error.type,
        stack: error.stack
      });

      // Tratamento espec√≠fico de erros da OpenAI
      if (error.code === 'insufficient_quota') {
        throw new Error('Limite de uso da API OpenAI excedido. Entre em contato com o administrador.');
      }

      if (error.code === 'rate_limit_exceeded') {
        throw new Error('Muitas requisi√ß√µes. Aguarde alguns segundos e tente novamente.');
      }

      if (error.code === 'invalid_api_key' || error.status === 401) {
        throw new Error('Chave de API OpenAI inv√°lida. Entre em contato com o administrador.');
      }

      throw new Error(`Erro ao gerar atividades: ${error.message}`);
    }
  }

  /**
   * Construir prompt estruturado para a OpenAI
   */
  private buildPrompt(
    content: string,
    title: string,
    discipline: string,
    grade: string,
    materialType: string
  ): string {
    return `
Analise o seguinte material did√°tico e gere atividades educacionais completas e pedagogicamente adequadas.

**INFORMA√á√ïES DO MATERIAL:**
- T√≠tulo: ${title}
- Disciplina: ${discipline}
- S√©rie/Ano: ${grade}
- Tipo: ${materialType}

**CONTE√öDO DO MATERIAL:**
${content}

**INSTRU√á√ïES:**
Com base no conte√∫do acima, gere atividades educacionais seguindo EXATAMENTE este formato JSON:

{
  "summary": "Um resumo claro e conciso do conte√∫do do material (2-3 frases)",
  "objectives": [
    "Objetivo de aprendizagem 1",
    "Objetivo de aprendizagem 2",
    "Objetivo de aprendizagem 3"
  ],
  "exercises": [
    "Exerc√≠cio aberto 1 (quest√£o que estimule reflex√£o e aplica√ß√£o do conte√∫do)",
    "Exerc√≠cio aberto 2",
    "Exerc√≠cio aberto 3"
  ],
  "multiple_choice": [
    {
      "question": "Pergunta de m√∫ltipla escolha 1?",
      "options": ["Alternativa A", "Alternativa B", "Alternativa C", "Alternativa D"],
      "answer": "A"
    },
    {
      "question": "Pergunta de m√∫ltipla escolha 2?",
      "options": ["Alternativa A", "Alternativa B", "Alternativa C", "Alternativa D"],
      "answer": "C"
    },
    {
      "question": "Pergunta de m√∫ltipla escolha 3?",
      "options": ["Alternativa A", "Alternativa B", "Alternativa C", "Alternativa D"],
      "answer": "B"
    }
  ],
  "essay_questions": [
    "Quest√£o dissertativa 1 (requer resposta elaborada)",
    "Quest√£o dissertativa 2"
  ]
}

**REQUISITOS IMPORTANTES:**
1. As atividades devem ser apropriadas para a s√©rie "${grade}"
2. Use linguagem clara e adequada para a faixa et√°ria
3. As quest√µes devem testar diferentes n√≠veis de compreens√£o (memoriza√ß√£o, compreens√£o, aplica√ß√£o, an√°lise)
4. Nas quest√µes de m√∫ltipla escolha, distribua as respostas corretas entre as alternativas (n√£o coloque todas como "A")
5. As quest√µes dissertativas devem estimular pensamento cr√≠tico
6. IMPORTANTE: Responda APENAS com o JSON, sem texto adicional antes ou depois

Gere as atividades agora:
`.trim();
  }

  /**
   * Validar estrutura da resposta da IA
   */
  private validateActivitiesStructure(activities: any): void {
    if (!activities.summary || typeof activities.summary !== 'string') {
      throw new Error('Resposta da IA inv√°lida: summary ausente ou inv√°lido');
    }

    if (!Array.isArray(activities.objectives) || activities.objectives.length === 0) {
      throw new Error('Resposta da IA inv√°lida: objectives deve ser um array n√£o vazio');
    }

    if (!Array.isArray(activities.exercises) || activities.exercises.length === 0) {
      throw new Error('Resposta da IA inv√°lida: exercises deve ser um array n√£o vazio');
    }

    if (!Array.isArray(activities.multiple_choice) || activities.multiple_choice.length === 0) {
      throw new Error('Resposta da IA inv√°lida: multiple_choice deve ser um array n√£o vazio');
    }

    // Validar estrutura de cada quest√£o de m√∫ltipla escolha
    activities.multiple_choice.forEach((q: any, index: number) => {
      if (!q.question || !Array.isArray(q.options) || q.options.length !== 4 || !q.answer) {
        throw new Error(`Quest√£o de m√∫ltipla escolha ${index + 1} inv√°lida`);
      }
    });

    if (!Array.isArray(activities.essay_questions) || activities.essay_questions.length === 0) {
      throw new Error('Resposta da IA inv√°lida: essay_questions deve ser um array n√£o vazio');
    }
  }

  /**
   * Estimar custo de tokens para uma requisi√ß√£o
   */
  estimateTokens(content: string): number {
    // Estimativa aproximada: 1 token ‚âà 4 caracteres em portugu√™s
    return Math.ceil(content.length / 4);
  }
}

// Export singleton
export const aiService = new AIService();
